model partners {
    id     Int     @id @default(autoincrement())
    name   String  @db.VarChar
    type   Decimal @db.Decimal(1, 0)
    edrpou String  @unique @db.VarChar(8)
    group  Int[]   @db.SmallInt

    entity_id Int
    entity    entity @relation(fields: [entity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    documents              documents[]
    synonym_for_partners   synonym_for_partners[]
    partner_account_number partner_account_number[]
    users_partners  users_partners[]

    created_at DateTime? @default(now()) @db.Timestamp()
    updated_at DateTime? @updatedAt @db.Timestamp()
    is_deleted Boolean   @default(false)
}

model partner_account_number {
    id         Int @id @default(autoincrement())
    partner_id Int

    partners partners @relation(fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    documents              documents[]
    template template[]


    bank_account String
    bank_name   String
    mfo          String

    is_default   Boolean @default(false)

    created_at DateTime? @default(now()) @db.Timestamp()
    updated_at DateTime? @updatedAt @db.Timestamp()
    is_deleted Boolean   @default(false)
}

model synonym_for_partners {
    id          Int    @id @default(autoincrement())
    partners_id Int
    name        String @db.VarChar

    partners partners @relation(fields: [partners_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    created_at DateTime? @default(now()) @db.Timestamp()
    updated_at DateTime? @updatedAt @db.Timestamp()
    is_deleted Boolean   @default(false)
}

model users_partners {
  id              Int       @id @default(autoincrement())
  user_id         Int
  partner_id      Int

  user            user      @relation(fields: [user_id], references: [id])
  partners         partners  @relation(fields: [partner_id], references: [id])
}
