
model partners {
  id                     Int                     @id @default(autoincrement())

  full_name       String    @db.VarChar
  short_name       String    @db.VarChar

  type                   Decimal?                @db.Decimal(1, 0)
  edrpou                 String                  @unique @db.VarChar(10)
  group                  Int[]                   @db.SmallInt

  entities               partners_on_entities[]
  documents              documents[]
  templates              template[]
  synonym_for_partners   synonym_for_partners[]
  partner_account_number partner_account_number[]
  users_partners         users_partners[]

  created_at             DateTime?               @default(now()) @db.Timestamp()
  updated_at             DateTime?               @updatedAt @db.Timestamp()
  is_deleted             Boolean                 @default(false)

}

model partner_account_number {
    id         Int @id @default(autoincrement())
    partner_id Int

    partners partners @relation(fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    documents              documents[]
    template template[]


    bank_account String
    bank_name   String?
    mfo          String?

    entities      partner_account_numbers_on_entities[]

    created_at DateTime? @default(now()) @db.Timestamp()
    updated_at DateTime? @updatedAt @db.Timestamp()
    is_deleted Boolean   @default(false)

    @@unique([partner_id,bank_account])
}

model synonym_for_partners {
    id          Int    @id @default(autoincrement())
    partners_id Int
    name        String @db.VarChar

    partners partners @relation(fields: [partners_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

    created_at DateTime? @default(now()) @db.Timestamp()
    updated_at DateTime? @updatedAt @db.Timestamp()
    is_deleted Boolean   @default(false)
}

model users_partners {
  id              Int       @id @default(autoincrement())
  user_id         Int
  entity_id       Int
  partner_id      Int

  user            user      @relation(fields: [user_id], references: [id])
  entity       entity @relation(fields: [entity_id], references: [id])
  partners         partners  @relation(fields: [partner_id], references: [id])
}
